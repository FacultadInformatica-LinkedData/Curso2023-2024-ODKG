To run all the queries, dbpedia sparql tool was used (https://dbpedia.org/snorql).

1. Get all the properties that can be applied to instances of the Politician class (<http://dbpedia.org/ontology/Politician>)

SELECT DISTINCT ?property
WHERE
{
	?object rdf:type <http://dbpedia.org/ontology/Politician>.
	?object ?property ?value
} 


2. Get all the properties, except rdf:type, that can be applied to instances of the Politician class

SELECT DISTINCT ?property
WHERE 
{
	?object rdf:type <http://dbpedia.org/ontology/Politician>.
	?object ?property ?value
	FILTER(?property != rdf:type)
}


3. Which different values exist for the properties, except for rdf:type, applicable to the instances of Politician?

SELECT DISTINCT ?property ?value
WHERE 
{
	?object rdf:type <http://dbpedia.org/ontology/Politician>.
	?object ?property ?value
	FILTER(?property != rdf:type)
}


4. For each of these applicable properties, except for rdf:type, which different values do they take globally for all those instances?

SELECT
	?property
	GROUP_CONCAT(
		DISTINCT ?value; separator=", "
	) as ?distinctValues
WHERE {
	?object rdf:type <http://dbpedia.org/ontology/Politician>.
	?object ?property ?value
	FILTER (?property != rdf:type)
}
GROUP BY ?property


5. For each of these applicable properties, except for rdf:type, how many distinct values do they take globally for all those instances?

SELECT
	?property
        COUNT(DISTINCT ?value) as ?distinctValuesSum
WHERE {
	?object rdf:type <http://dbpedia.org/ontology/Politician>.
	?object ?property ?value
	FILTER (?property != rdf:type)
}
GROUP BY ?property