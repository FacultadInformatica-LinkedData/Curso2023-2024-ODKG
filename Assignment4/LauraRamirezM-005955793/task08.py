# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tv2_B0lG4uqrrCy8AMZwYYW_Ol6bw7BR

**Task 08: Completing missing data**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

print('Grafo 1')
for s,p,o in g1:
  print(s,p,o)

print('Grafo 2')
for s,p,o in g2:
  print(s,p,o)

""" Elementos de la clase Person en el primer grafo"""

from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery

ns = Namespace('http://data.org#')
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

q1 = prepareQuery('''
  SELECT ?Subject ?Element ?WHERE {
    ?Subject RDFS:subClassOf* ns:Person.
    ?Element RDF:type ?Subject.
  }
  ''',
  initNs = { "RDFS": RDFS, "RDF": RDF, "ns":ns}
)
for r in g1.query(q1):
  print(r.Element)

"""Encontrar los valores en el segundo grafo


"""

q2 = prepareQuery('''
  SELECT ?val WHERE {
   ?Person ?vcard ?val
  }
  '''
)
for r in g1.query(q2):
    print(r.val)

"""Lista con los campos a completar"""

values=['Given','Family','EMAIL']

"""Iterar sobre las personas del grafo 1, verificar si la propiedad está presente, y si no lo está, añadirla"""

for person in g1.subjects(RDF.type, ns.Person):
    for val in values:
        if not (person, VCARD[val], None) in g1:
            for value in g2.objects(person, VCARD[val]):
                g1.add((person, VCARD[val], value))
print('Grafo 1')
for s,p,o in g1:
  print(s,p,o)