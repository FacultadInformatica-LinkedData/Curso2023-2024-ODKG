# -*- coding: utf-8 -*-
"""Task06 Ewa Kupczyk.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fqN5aZ_kaciD9T7zYw6vwBKXw5FUGTbn

**Task 06: Modifying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2023-2024/master/Assignment4/course_materials"

"""Read the RDF file as shown in class"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example5.rdf", format="xml")

"""Create a new class named Researcher"""

ns = Namespace("http://somewhere#")
g.add((ns.Researcher, RDF.type, RDFS.Class))
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.1: Create a new class named "University"**

"""

# TO DO
# Visualize the results


ns = Namespace("http://somewhere#")
g = Graph()
g.namespace_manager.bind('ns', ns, override=False)

# Create a new class named University
g.add((ns.University, RDF.type, RDFS.Class))
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.2: Add "Researcher" as a subclass of "Person"**"""

# Create a new class named Researcher
g.add((ns.Researcher, RDF.type, RDFS.Class))

# Create a new class named Person
g.add((ns.Person, RDF.type, RDFS.Class))

# Add Researcher as a subclass of Person
g.add((ns.Researcher, RDFS.subClassOf, ns.Person))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.3: Create a new individual of Researcher named "Jane Smith"**"""

# Create a new class named Researcher
g.add((ns.Researcher, RDF.type, RDFS.Class))

# Create an individual named "Jane Smith" of class Researcher
jane_smith_uri = ns["JaneSmith"]
g.add((jane_smith_uri, RDF.type, ns.Researcher))
g.add((jane_smith_uri, RDFS.label, Literal("Jane Smith")))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.4: Add to the individual JaneSmith the email address, fullName, given and family names**"""

from rdflib.namespace import RDF, RDFS


# Create a new class named Researcher
g.add((ns.Researcher, RDF.type, RDFS.Class))

# Create an individual named "Jane Smith" of class Researcher
jane_smith_uri = ns["JaneSmith"]
g.add((jane_smith_uri, RDF.type, ns.Researcher))
g.add((jane_smith_uri, RDFS.label, Literal("Jane Smith")))

# Add email address, full name, given name, and family name using custom properties
g.add((jane_smith_uri, ns.email, Literal("jane.smith@example.com")))
g.add((jane_smith_uri, RDFS.label, Literal("Jane Smith")))
g.add((jane_smith_uri, ns.givenName, Literal("Jane")))
g.add((jane_smith_uri, ns.familyName, Literal("Smith")))

# Print the triples in the graph
for s, p, o in g:
    print(s, p, o)

"""**TASK 6.5: Add UPM as the university where John Smith works**"""

# Create an individual named "Jane Smith" of class Researcher
jane_smith_uri = ns["JaneSmith"]
g.add((jane_smith_uri, RDF.type, ns.Researcher))
g.add((jane_smith_uri, RDFS.label, Literal("Jane Smith")))

# Create a new class named University
g.add((ns.University, RDF.type, RDFS.Class))

# Create an individual named "UPM" of class University
upm_uri = ns["UPM"]
g.add((upm_uri, RDF.type, ns.University))
g.add((upm_uri, RDFS.label, Literal("UPM")))

# Create a property "worksAt" to represent where a researcher works
g.add((ns.worksAt, RDF.type, RDF.Property))

# Specify that "John Smith" works at "UPM"
john_smith_uri = ns["JohnSmith"]
g.add((john_smith_uri, RDF.type, ns.Researcher))
g.add((john_smith_uri, RDFS.label, Literal("John Smith")))
g.add((john_smith_uri, ns.worksAt, upm_uri))


for s, p, o in g:
    print(s, p, o)

"""**Task 6.6: Add that Jown knows Jane using the FOAF vocabulary**"""

from rdflib.namespace import FOAF
john_smith = ns.JohnSmith
jane_smith = ns.JaneSmith
g.namespace_manager.bind('foaf', FOAF, override=False)
g.add((john_smith, FOAF.knows, jane_smith))
# Visualize the results
for s, p, o in g:
  print(s,p,o)