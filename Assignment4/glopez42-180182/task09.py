# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aA_7cDJnS46kKnLS5uuCGN5_s3QANqk-

**Task 09: Data linking**
"""
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4/"

from rdflib import Graph, Namespace, Literal, URIRef
from rdflib.namespace import RDF, RDFS, FOAF, OWL
from rdflib.plugins.sparql import prepareQuery

g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"resources/data03.rdf", format="xml")
g2.parse(github_storage+"resources/data04.rdf", format="xml")

ns3 = Namespace("http://data.three.org#")
ns4 = Namespace("http://data.four.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

for s,p,o in g1.triples((None, RDF.type, ns3.Person)):
    person1_given = ""
    person1_fn = ""
    for _,_,name in g1.triples((s, VCARD.Given, None)):
        person1_given = name
    for _,_,familyname in g1.triples((s, VCARD.FN, None)):
        person1_fn = familyname
    
    for s2,p2,o2 in g2.triples((None, RDF.type, ns4.Person)):
        person2_given = ""
        person2_fn = ""
        for _,_,name in g2.triples((s2, VCARD.Given, None)):
            person2_given = name
        for _,_,familyname in g2.triples((s2, VCARD.FN, None)):
            person2_fn = familyname
        
        if person1_fn == person2_fn and person1_given == person2_given:
            g3.add((s,OWL.sameAs,s2))

print(g3.serialize(format="ttl"))
