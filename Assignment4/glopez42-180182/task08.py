# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18P0xTS31q1P7nR4efg0Yy3QrClOxqMAe

**Task 08: Completing missing data**
"""

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4/"

from rdflib import Graph, Namespace, Literal, URIRef
from rdflib.namespace import RDF, RDFS, FOAF
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"resources/data01.rdf", format="xml")
g2.parse(github_storage+"resources/data02.rdf", format="xml")

ns = Namespace("http://data.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

for s,p,o in g1.triples((None, RDF.type, ns.Person)):
    print(s) # elementos de Person en g1
    # por cada persona vemos que campos faltan por completar
    fields_to_complete = [VCARD.Given, VCARD.Family, VCARD.EMAIL]
    for s1,p1,o1 in g1.triples((s, None, None)):
          if p1 != RDF.type and p1 in fields_to_complete:
                fields_to_complete.remove(p1)
    # completamos los campos accediendo al grafo 2
    for field in fields_to_complete:
        for s2,p2,o2 in g2.triples((s, field, None)): 
            g1.add((s, p2, o2))

print(g1.serialize(format="ttl"))
