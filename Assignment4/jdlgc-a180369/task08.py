# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SGgAl4bFKYOtpOMm76Lwm9JBSMYc1102

**Task 08: Completing missing data**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery

ns= Namespace("http://data.org#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

print("1. Se muestran todos los datos que tiene el grafo 1.")
for s,p,o in g1.triples((None, None, None)):
  print(s,p,o)

print("\n")
print("2. Se muestran todos los datos que tiene el grafo 2.")
for s,p,o in g2.triples((None, None, None)):
  print(s,p,o)

print("\n")
print("3. Se agrupan los datos por individuo, para ver sus propiedades y valores de estas.")
for s,p,o in g1.triples((None, RDF.type, ns.Person)):
  print(f"Indiviudal: {s}")
  for ss,pp,oo in g1.triples((s, None, None)):
    print(f"Property: {pp}; Object: {oo}")
  print("\n")

print("\n")
print("4. Se completan los campos (given name, family name e email) que faltan a partir del grafo 2 con rdflib.")
for s,p,o in g1.triples((None, RDF.type, ns.Person)):
  for ss,pp,oo in g2.triples((s, None, None)):
    g1.add((s,pp,oo))

for s,p,o in g1.triples((None, RDF.type, ns.Person)):
  print(f"Indiviudal: {s}")
  for ss,pp,oo in g1.triples((s, None, None)):
    print(f"Property: {pp}; Object: {oo}")
  print("\n")



print("\n")
print("5. Se completan los campos (given name, family name e email) que faltan a partir del grafo 2 con SPARQL.")
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
for s,p,o in g1.triples((None, RDF.type, ns.Person)):
  q1 = prepareQuery('''
  SELECT
    ?Given ?EMAIL ?Family
  WHERE {
   ?Subject vcard:Given ?Given.
   ?Subject vcard:EMAIL ?EMAIL.
   ?Subject vcard:Family ?Family
  }
  ''',
  initNs = {"vcard": vcard}
  )
  for r in g2.query(q1, initBindings = { '?Subject' : s }):
    if r.Given is not None:
      g1.add((s,vcard.Given,Literal(r.Given)))
    if r.EMAIL is not None:
      g1.add((s,vcard.EMAIL,Literal(r.EMAIL)))
    if r.Family is not None:
      g1.add((s,vcard.Family,Literal(r.Family)))

for s,p,o in g1.triples((None, RDF.type, ns.Person)):
  print(f"Indiviudal: {s}")
  for ss,pp,oo in g1.triples((s, None, None)):
    print(f"Property: {pp}; Object: {oo}")
  print("\n")