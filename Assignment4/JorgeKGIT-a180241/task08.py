# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b9lk0UIy_jejWFkW0yzGBdL2r9FO6_nE

**Task 08: Completing missing data**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

from rdflib.namespace import RDF, RDFS
g1.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g1.namespace_manager.bind('data', Namespace("http://data.org#"), override=False)
data = Namespace("http://data.org#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

print(vcard.Given)

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

for s,p,o in g1.triples((None, RDF.type, data.Person)):
  print(s) # elementos de Person en g1
  #[vcard.Given, vcard.Family, vcard.EMAIL]
  if not (s, vcard.Given, None) in g1:
        g1.add((s, vcard.Given, g2.value(s, vcard.Given)))
  if not (s,vcard.Family, None) in g1:
         g1.add((s, vcard.Family,  g2.value(s, vcard.Family )))
  if not (s,vcard.email, None) in g1:
         g1.add((s, vcard.EMAIL,  g2.value(s, vcard.EMAIL)))
print(g1.serialize(format="ttl"))

