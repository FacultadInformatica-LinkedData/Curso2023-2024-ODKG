# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1df-ByQKWoKNDCS_nqoZPuzaHXc7eXCtB

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

from rdflib.namespace import RDF, RDF,OWL,RDFS
from rdflib.plugins.sparql import prepareQuery
data = Namespace("http://data.org#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

"""## Se revisan los valores de los grafos g1 y g2"""

for s,p,o in g1.triples((None,None,None)):
  print(s,p,o)

for s,p,o in g2.triples((None,None,None)):
  print(s,p,o)

"""## Se buscan los valores que coincidan en ambos grafos, y se añade la tripleta al grafo g3"""

lista=[]
for s1,p1,o1 in g1.triples((None,vcard.Given,None)):
  for s2,p2,o2 in g2.triples((None,vcard.Given,None)):
    if(o1==o2):
      lista.append(s1)

for s1,p1,o1 in g1.triples((None,vcard.Family,None)):
  for s2,p2,o2 in g2.triples((None,vcard.Family,None)):
      if(o1==o2 and s1 in lista):
        g3.add((s1,OWL.sameAs,s2))

"""# Se muestran todos los datos de g3 para revisar la solución"""

for s1,p1,o1 in g3.triples((None,None,None)):
  print(s1,o1,p1)