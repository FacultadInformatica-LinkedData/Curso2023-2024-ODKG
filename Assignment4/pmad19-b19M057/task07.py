# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kqRwNP_1DEMRghtIXrfVlOD6lB-BI5DS

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2023-2024/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

# TO DO
from rdflib.plugins.sparql import prepareQuery

ns = Namespace("http://somewhere#")

# With RDFLib
subclasses_rdflib = [s for s,p,o in g.triples((None, RDFS.subClassOf, ns.LivingThing))]

# With SPARQL
q1 = prepareQuery('''
  SELECT ?Subject WHERE{
    ?Subject rdfs:subClassOf ns:LivingThing
  }
  ''',
  initNs={"ns" : ns, "rdfs" : RDFS}
)

# Visualize the results
for i in subclasses_rdflib:
  print(i)

print("--------")

for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# With RDFLib
individuals = [s for s,p,o in g.triples((None, RDF.type, ns.Person))]
subclasses = [s for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person))]
for i in subclasses:
  subclass_individuals = [s for s,p,o in g.triples((None, RDF.type, i))]
  for individual in subclass_individuals:
    individuals.append(individual)

# With SPARQL
q2 = prepareQuery('''
  SELECT ?Subject WHERE{
    ?Class rdfs:subClassOf* ns:Person .
    ?Subject a ?Class
  }
  ''',
  initNs={"ns" : ns, "rdfs" : RDFS}
)

# Visualize the results
for i in individuals:
  print(i)

print("--------")

for r in g.query(q2):
  print(r.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
# With RDFLib
properties = []
for i in individuals: # Of 7.2
  p = [p for s,p,o in g.triples((i, None, None))]
  individual_class = g.value(i, RDF.type, None)
  properties.append((i,individual_class, p))

# With SPARQL
q3 = prepareQuery('''
  SELECT ?Subject ?Class ?Predicate WHERE{
    ?Subject ?Predicate ?Object .
    ?Subject a ?Class .
    ?Class rdfs:subClassOf* ns:Person
  }
  ''',
  initNs={"ns" : ns, "rdfs" : RDFS}
)

# Visualize the results
for i,j,k in properties:
  for element in k:
    print(i, j, element)

print("--------")

for r in g.query(q3):
  print(r.Subject, r.Class, r.Predicate)

