# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17kOFYF1I1mM1xCeHOfk_y7Xs-Z3JiieQ

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

from rdflib.plugins.sparql import prepareQuery
dataorg = Namespace("http://data.org/#")
owl=Namespace("http://www.w3.org/1999/02/22-owl-syntax-ns#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
q1 = prepareQuery('''
  SELECT DISTINCT ?Subject ?given ?fam WHERE {
    ?Subject vcard:Family ?fam.
    ?Subject vcard:Given ?given.
  }
  ''',
  initNs = { "vcard": vcard}
)
for r in g1.query(q1):
  for s,p,o in g2.triples((None,vcard.Given,r.given)):
    for s2,p2,o2 in g2.triples((None,vcard.Family,r.fam)):
      g3.add((r.Subject, owl.SameAs, s))
      g3.add((s, owl.SameAs, r.Subject))

print("Print de los sameAs incluidos")
for r,i,k in g3.triples((None,owl.SameAs,None)):
  print(r,i,k)
