# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WwhLXfEELa5G5phAIlg9PnJHlpOl8MPr

**Task 08: Completing missing data**
"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"
from rdflib.plugins.sparql import prepareQuery
from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

import rdflib
from rdflib.namespace import RDF, RDFS
dataorg = Namespace("http://data.org/#")
esc=Namespace("http://www.w3.org/1999/02/22-rdf-syntax-ns#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
rdfs = Namespace("http://www.w3.org/2000/01/rdf-schema#")
ns = Namespace("http://data.org#")
q1 = prepareQuery('''
  SELECT DISTINCT ?s ?given ?mail ?fam WHERE { 
    ?s rdf:type ns:Person. 
    OPTIONAL{?s vcard:Given ?given}.
    OPTIONAL{?s vcard:Family ?fam}.
     OPTIONAL{?s vcard:EMAIL ?mail}.
  } 
  ''',
  initNs = { "vcard": vcard,"rdfs":rdfs,"ns":ns,"rdf":RDF}
)
for r in g1.query(q1):
  
    for r2 in g2.query(q1, initBindings={"?s":r.s}):
      if(r.given == None):
        if(r2.given!=None):
          g1.add((r.s,vcard.Given,r2.given))
      if(r.fam == None):
        if(r2.fam!=None):
          g1.add((r.s,vcard.Family,r2.fam))
      if(r.mail == None):
        if(r2.mail!=None):
          g1.add((r.s,vcard.EMAIL,r2.mail))

 

for r,s,o in g1.triples((None,esc.type,rdflib.term.URIRef('http://data.org#Person'))):
  print(r)
  for i,j,k in g1.triples((r,None,None)):
    print(i,j,k)
