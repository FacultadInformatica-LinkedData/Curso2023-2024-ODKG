# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gPU3HkPruK_RRjmZxzLpkcpKWB6h1941

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

for s,o,p in g1:
  print(s,o,p)

for s,o,p in g2:
  print(s,o,p)

from rdflib import Graph, Namespace, OWL
from rdflib.plugins.sparql import prepareQuery

data_three = Namespace("http://data.three.org#")
data_four = Namespace("http://data.four.org#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")


q1 = prepareQuery(
    '''
    SELECT ?individual ?given ?family
        WHERE {
            ?individual vcard:Given ?given .
            ?individual vcard:Family ?family .
        }
'''
, initNs={"vcard": vcard}
)


for ind_g1, given_g1, family_g1 in g1.query(q1):
    for ind_g2, given_g2, family_g2 in g2.query(q1):
        if given_g1 == given_g2 and family_g1 == family_g2:
            g3.add((ind_g1, OWL.sameAs, ind_g2))


for s, p, o in g3:
    print(s, p, o)