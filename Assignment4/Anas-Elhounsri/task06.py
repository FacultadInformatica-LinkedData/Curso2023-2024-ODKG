# -*- coding: utf-8 -*-
"""Task06.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/1nyR-tTtqy8h8yv5vyeslI7oljBQElfoi
**Task 06: Modifying RDF(s)**
"""


github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2023-2024/master/Assignment4/course_materials"

"""Read the RDF file as shown in class"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS, FOAF
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example5.rdf", format="xml")

"""Create a new class named Researcher"""

ns = Namespace("http://somewhere#")
g.add((ns.Researcher, RDF.type, RDFS.Class))

"""**TASK 6.1: Create a new class named "University"**"""
ns = Namespace("http://somewhere#")
g.add((ns.University, RDF.type, RDFS.Class))

# TO DO
# Visualize the results

# for s, p, o in g:
#   print( s,p,o)

"""**TASK 6.2: Add "Researcher" as a subclass of "Person"**"""
g.add((ns.Researcher, RDFS.subClassOf, ns.Person))

# TO DO
# Visualize the results
# for s, p, o in g:
#   print(s,p,o)

"""**TASK 6.3: Create a new individual of Researcher named "Jane Smith"**"""
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
individual1 = ns.JaneSmith
g.add((individual1, RDF.type, ns.Researcher))
g.add((individual1, vcard.FN, Literal("Jane Smith")))

# TO DO
# Visualize the results
# for s, p, o in g:
#   print(s,p,o)

"""**TASK 6.4: Add to the individual JaneSmith the email address, fullName, given and family names**"""
email_address = Literal("jane.smith@example.com")
g.add((individual1, vcard.EMAIL, email_address))

full_name = Literal("Jane Smith")
g.add((individual1, vcard.FN, full_name))

given_name = Literal("Jane")
g.add((individual1, vcard.Given, given_name))

family_name = Literal("Smith")
g.add((individual1, vcard.Family, family_name))

# TO DO
# Visualize the results
# for s, p, o in g:
#   print(s,p,o)

"""**TASK 6.5: Add UPM as the university where John Smith works**"""
individual2 = ns.JohnSmith
university = ns.UPM
g.add((individual2, vcard.Org, university))

# TO DO
# Visualize the results
# for s, p, o in g:
#   print(s,p,o)

"""**Task 6.6: Add that Jown knows Jane using the FOAF vocabulary**"""
g.add((individual2, FOAF.knows, individual1))
# TO DO
# Visualize the results
for s, p, o in g.triples((individual2, FOAF.knows, individual1)):
    print(f"{s} knows {o}")