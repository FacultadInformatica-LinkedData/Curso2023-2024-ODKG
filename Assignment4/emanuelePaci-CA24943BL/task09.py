# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1__Ygf1qKq3H7nC8JYcGX7VeIahIAemw1

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef, FOAF, OWL

g1 = Graph()
g2 = Graph()
g3 = Graph()

g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos.

Search for individuals in the two graphs and link them using the OWL:sameAs property, insert these matches in g3. We consider two individuals the same if they have the same nickname and family name. Note that the URIs need not be the same for the same individual in the two networks.
"""

ns = Namespace("http://data.org#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

# iterate through individuals in graph 1
for s1, given_name1, family_name1 in g1.triples((None, vcard.Given, None)):
    for s2, given_name2, family_name2 in g2.triples((None, vcard.Given, None)):
        if given_name1 == given_name2 and family_name1 == family_name2:
            # match
            g3.add((s1, OWL.sameAs, s2))

# print graph 3
print("GRAPH 3")
for s, p, o in g3.triples((None, None, None)):
    print(s, p, o)